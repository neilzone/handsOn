# -*- coding: utf-8; mode: apache -*-
# ----------------------------------------------------------------------------
# Purpose:     serve seafile proxy on this (127.0.0.1) server
# ----------------------------------------------------------------------------

<Directory ${SEAFILE_HOME}>
    # seafile uses symbolic links, apache has to follow
    Options FollowSymLinks
</Directory>

# static media at https://domain.my/seafmedia
# -------------------------------------------

Alias /seafmedia  ${SEAFILE_HOME}/seafile-server-latest/seahub/media

<Location /seafmedia>

    <IfModule mod_security2.c>
        SecRuleEngine Off
    </IfModule>

    ProxyPass !

    Require all granted

    Order deny,allow
    Deny from all
    Allow from all
    AllowOverride None

    <IfModule mod_autoindex.c>

        Options +Indexes +FollowSymLinks
        HeaderName /chrome/header.shtml
        ReadmeName /chrome/footer.shtml

        <IfModule mod_headers.c>
            Header always set X-Robots-Tag "none"
        </IfModule>
    </IfModule>
</Location>

# seafile file-server at https://domain.my/seafle/seafhttp
# --------------------------------------------------------

# Note: The file server path MUST be /seafhttp because this path is hardcoded in
# the clients.
RewriteRule ^/seafhttp - [QSA,L]

<Location /seafhttp>
    ProxyPass         http://127.0.0.1:${SEAFILE_PORT}
    ProxyPassReverse  http://127.0.0.1:${SEAFILE_PORT}
</Location>

# seahub at https://domain.my/seafle
# ----------------------------------

<Location ${SEAFILE_APACHE_URL}>

    <IfModule mod_security2.c>
        SecRuleEngine Off
    </IfModule>

    SetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=\$1
    ProxyPreserveHost On
    ProxyPass  http://127.0.0.1:${SEAHUB_PORT}${SEAFILE_APACHE_URL}

    #Require all granted
    #ProxyPassReverse  http://127.0.0.1:${SEAHUB_PORT}

    #RequestHeader add X-Forwarded-Proto https
    #RequestHeader set X-Forwarded-Ssl on

</Location>



