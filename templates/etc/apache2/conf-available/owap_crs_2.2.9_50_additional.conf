# -*- coding: utf-8; mode: apache -*-
# ----------------------------------------------------------------------------
# Purpose: ModSecurity CRS from OWAP
#          https://github.com/SpiderLabs/owasp-modsecurity-crs
# ----------------------------------------------------------------------------

# Experimantal
# ------------

# Einige der *experimantal* habe exec: Anweisungen, bei denen muss man erst den
# Pfad anpassen. Ich selber nutze diese aber nicht, da ich nicht weiß welche
# Last das noch alles Erzeugt.

Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_11_brute_force.conf
Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_11_dos_protection.conf

# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_11_proxy_abuse.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_11_slow_dos_protection.conf

# You must update the local path for the exec action to point to the lua script
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_16_scanner_integration.conf

# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_25_cc_track_pan.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_40_appsensor_detection_point_2.0_setup.conf

# You must update the local path for the exec action to point to the lua script
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_40_appsensor_detection_point_2.1_request_exception.conf

# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_40_appsensor_detection_point_2.9_honeytrap.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_40_appsensor_detection_point_3.0_end.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_40_http_parameter_pollution.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_42_csp_enforcement.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_46_scanner_integration.conf

# You must update the local path for the exec action to point to the lua script
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_48_bayes_analysis.conf

# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_55_response_profiling.conf
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_56_pvi_checks.conf

# You must update the local path for the exec action to point to the lua script
# Include /usr/share/owasp-modsecurity-crs/experimental_rules/modsecurity_crs_61_ip_forensics.conf


# SpiderLabs Research
# -------------------

# Das ist alles schon ziemlich alter Kram, der sich i.d.R. auch nur lohnt, wenn
# man irgendwelche alten PHP Anwendungen hostet. Die crs Dateien haben auch
# z.T. die selben Signaturen drin, man kann also nicht einfach alle aktivieren
# (was eh nicht grad schlau wäre). Ich weiß nicht wie gut sich z.B. Wordpress
# inzwischen gegen Attaken schützt Wenn man da Zweifel hat, dann kann man
# z.B. mal die wordpress_attacks.conf aktivieren (aber das ist ja auch
# alt). Joomla ist eh Schrott, so was sollte man besser erst gar nicht hosten
# ;-)

# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_joomla_attacks.conf
# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_lfi_attacks.conf
# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_phpbb_attacks.conf
# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_rfi_attacks.conf
# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_sqli_attacks.conf
# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_wordpress_attacks.conf
# Include /usr/share/owasp-modsecurity-crs/slr_rules/modsecurity_crs_46_slr_et_xss_attacks.conf

